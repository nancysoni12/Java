/*
Inheritence
______________
inheritence means if we transper the 
data of one class to another class 
called as inheritence

why use the inheritence ?
______________________
1) generlization  :
if we have the 
2) reusibility

if we want transper the content of one class 
to another class in java 
we have the extends keyword.

class A
{
}
class B extends A
{
}

here A is super class and B is a sub class 

note: in the case of java we cannot create the any program 
without inheritence.

because in java every class having a default parent class 
called as Object class.

class A
{
}
internally compiler consider it as 

class A extends java.lang.Object
{
}

why java provide the Object class as parent to every 
one ?
_________________________________________________
because Object class contain the some methods those 
required for every class 

so java decide put all methods under the 
class name as Object class and declare it is a
parent of all 

public class java.lang.Object {
  public java.lang.Object();
  public final native java.lang.Class<?> getClass();
  public native int hashCode();
  public boolean equals(java.lang.Object);
  protected native java.lang.Object clone() throws java.lang.CloneNotSupport
ception;
  public java.lang.String toString();
  public final native void notify();
  public final native void notifyAll();
  public final native void wait(long) throws java.lang.InterruptedException;
  public final void wait(long, int) throws java.lang.InterruptedException;
  public final void wait() throws java.lang.InterruptedException;
  protected void finalize() throws java.lang.Throwable;
  static {};
}


note: as per the standard of oop 
when we use the inheritence with two classes then 
classes bind in new relationship called as IS-A relationship


HAS-A association or relationship 
_________________________________
if we create the object of one class in to the another class 
called as HAS-A relationship 


class Ratio
{
}
class Subject
{ 
}
class Math extends Subject
{ 
   Ratio r=new Ratio();
}

the best example of HAS-A implementation is 
System.out.println()

System is a class out is a static reference of PrintStream class 
System and PrintStream maintain the HAS-A relationship between 
them println() is overloaded method of PrintStream for 
display the output on output screen.

in the case of inheritence we not need to create the object of 
parent class we can access the parent object using 
child class.

*/
class Value
{ int no;
  void setValue(int x)
  {no=x;
  }
}
class Square extends Value
{
   public void showSquare()
   { System.out.println("Square is  "+(no*no));
   }
}
class Cube extends Value
{
   public void showCube()
   { System.out.println("Cube is  "+(no*no*no));
   }
}
public class SquareCubeApp
{  public static void main(String x[])
   { Square s=new Square();
      s.setValue(5);
      s.showSquare();
     Cube c=new Cube();
      c.setValue(6);
      c.showCube();
   }
}


note:in java we  cannot create the any program without inheritence

in java every class having a default parent class name as Object class 

e.g
class A 
{

}
internally
____________
class A extends java.lang.Object
{
}

Q.why java provide the Object class as parent class to every class  ?
because Object class contain the some methods  those required to every class 
so java put all methods in  Object class and mark object as parent to every one 
means indiirectly every method present in every class of java 

methods 
_____________

 public final native java.lang.Class<?> getClass();
  public native int hashCode();
  public boolean equals(java.lang.Object);
  protected native java.lang.Object clone() throws java.lang.CloneNotSupportedException;
  public java.lang.String toString();
  public final native void notify();
  public final native void notifyAll();
  public final native void wait(long) throws java.lang.InterruptedException;
  public final void wait(long, int) throws java.lang.InterruptedException;
  public final void wait() throws java.lang.InterruptedException;
  protected void finalize() throws java.lang.Throwable;
  static {};


note: java.lang is a default package means not need to import  it.
*/
class Value
{
  int a,b;
  void setValue(int x,int y)
   { a=x;
     b=y;
   }
}
class Add extends Value
{
   void showAdd()
   { System.out.printf("Add is %d ",(a+b));
  //cout<<"Addis  "<<x+y
   }
}
public class AddApp
{
   public static void main(String x[])
   {
       Add ad=new Add();
       ad.setValue(100,200);
       ad.showAdd();
   }
}

Encapusulation
-------------------
class Student 
{
  private int id;
  private String name;
  private float per;
  private String contact;
   
  void setDetails(String n,int i,float p,String c)
   {
    id=i;
    name=n;
    per=p;
    contact=c;
   }
   void showDetails(String type)
   {
    if(type.equals("itindustry"))
    { 
      System.out.println(name+"\t"+id+"\t"+per+"\t"+contact);
    }
    else
    { System.out.println("Not Access");
    }
   }
}




